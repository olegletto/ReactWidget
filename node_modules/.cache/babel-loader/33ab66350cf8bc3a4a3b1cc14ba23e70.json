{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\Lesson 4\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\Lesson 4\\\\weather\\\\src\\\\App.js\";\nimport React, { useState, useTown } from 'react';\nimport './App.css';\nimport Widget from './wethervidget';\n\nfunction App(props) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"\\u041F\\u041E\\u0413\\u041E\\u0414\\u0410\", React.createElement(Widget, {\n    city: \"Moscow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}\n\nexport default App; // <input type='text' value={town}/>\n// {<input type='text' value={this.state.value} onChange = {(event) => {setCity(event.target.value)}}/>}","map":{"version":3,"sources":["C:/Users/user/Desktop/React/Lesson 4/weather/src/App.js"],"names":["React","useState","useTown","Widget","App","props","city","setCity"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,QAAuC,OAAvC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,oBAEMJ,QAAQ,EAFd;AAAA;AAAA,QAEXK,IAFW;AAAA,QAELC,OAFK;;AAIlB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGF,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE,CADF;AAOD;;AAED,eAAeH,GAAf,C,CAGA;AACA","sourcesContent":["import React, {useState, useTown} from 'react';\nimport './App.css';\nimport Widget from './wethervidget';\n\nfunction App(props) {\n\n  const [city, setCity] = useState();\n\n  return (\n    <div className=\"App\">\n      ПОГОДА\n      \n  <Widget city = 'Moscow' />\n    </div>\n  );\n}\n\nexport default App;\n\n\n// <input type='text' value={town}/>\n// {<input type='text' value={this.state.value} onChange = {(event) => {setCity(event.target.value)}}/>}"]},"metadata":{},"sourceType":"module"}